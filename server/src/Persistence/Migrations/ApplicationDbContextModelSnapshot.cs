// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Domain.AuthUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime>("DateJoined")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_joined");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("varchar(254)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("first_name");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_active");

                    b.Property<bool>("IsStaff")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_staff");

                    b.Property<bool>("IsSuperuser")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_superuser");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_login");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("last_name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("password");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Username" }, "username")
                        .IsUnique();

                    b.ToTable("auth_user", (string)null);
                });

            modelBuilder.Entity("Domain.RegabiturAdditionalinfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "UserId" }, "user_id")
                        .IsUnique();

                    b.ToTable("regabitur_additionalinfo", (string)null);
                });

            modelBuilder.Entity("Domain.RegabiturAdditionalinfoEducationProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("AdditionalinfoId")
                        .HasColumnType("int")
                        .HasColumnName("additionalinfo_id");

                    b.Property<int>("ChoicesprofileId")
                        .HasColumnType("int")
                        .HasColumnName("choicesprofile_id");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ChoicesprofileId" }, "regabitur_additional_choicesprofile_id_c3becd9c_fk_regabitur");

                    b.HasIndex(new[] { "AdditionalinfoId", "ChoicesprofileId" }, "regabitur_additionalinfo_additionalinfo_id_choice_a9d99a17_uniq")
                        .IsUnique();

                    b.ToTable("regabitur_additionalinfo_education_profile", (string)null);
                });

            modelBuilder.Entity("Domain.RegabiturChoicesprofile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("description");

                    b.HasKey("Id");

                    b.ToTable("regabitur_choicesprofile", (string)null);
                });

            modelBuilder.Entity("Domain.RegabiturCustomuser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("varchar(400)")
                        .HasColumnName("address");

                    b.Property<bool>("AgreementFlag")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("agreement_flag");

                    b.Property<string>("CommentAdmin")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("comment_admin");

                    b.Property<bool>("CompleteFlag")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("complete_flag");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("date")
                        .HasColumnName("date_of_birth");

                    b.Property<string>("DateOfDoc")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("date_of_doc");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("message");

                    b.Property<string>("NameUz")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("name_uz");

                    b.Property<string>("Passport")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("passport");

                    b.Property<string>("Patronymic")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("patronymic");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("phone_number");

                    b.Property<string>("SendingStatus")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("sending_status");

                    b.Property<string>("Snils")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("snils");

                    b.Property<bool>("SuccessFlag")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("success_flag");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<bool>("WorkFlag")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("work_flag");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "UserId" }, "user_id")
                        .IsUnique()
                        .HasDatabaseName("user_id1");

                    b.ToTable("regabitur_customuser", (string)null);
                });

            modelBuilder.Entity("Domain.RegabiturDocumentuser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime>("DatePub")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_pub");

                    b.Property<string>("Doc")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("doc");

                    b.Property<string>("NameDoc")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("name_doc");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "UserId" }, "regabitur_documentuser_user_id_2349932c_fk_auth_user_id");

                    b.ToTable("regabitur_documentuser", (string)null);
                });

            modelBuilder.Entity("Domain.RegabiturPublishtab", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<bool>("AspOfoKs")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("asp_ofo_ks");

                    b.Property<bool>("AspOfoTip")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("asp_ofo_tip");

                    b.Property<bool>("AspOfoUp")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("asp_ofo_up");

                    b.Property<bool>("AspZfoKs")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("asp_zfo_ks");

                    b.Property<bool>("AspZfoTip")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("asp_zfo_tip");

                    b.Property<bool>("AspZfoUp")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("asp_zfo_up");

                    b.Property<bool>("BakOfoGp")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("bak_ofo_gp");

                    b.Property<bool>("BakOfoUp")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("bak_ofo_up");

                    b.Property<bool>("BakOzfoGp")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("bak_ozfo_gp");

                    b.Property<bool>("BakOzfoUp")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("bak_ozfo_up");

                    b.Property<bool>("BakZfoGp")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("bak_zfo_gp");

                    b.Property<bool>("BakZfoUp")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("bak_zfo_up");

                    b.Property<DateTime?>("DatePub")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_pub");

                    b.Property<string>("IndividualStr")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("individual_str");

                    b.Property<bool>("MagOfoPo")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("mag_ofo_po");

                    b.Property<bool>("MagOfoTp")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("mag_ofo_tp");

                    b.Property<bool>("MagZfoPo")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("mag_zfo_po");

                    b.Property<bool>("MagZfoTp")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("mag_zfo_tp");

                    b.Property<bool>("SpecOfoSd")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("spec_ofo_sd");

                    b.Property<string>("TestType")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("test_type");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "UserId" }, "user_id")
                        .IsUnique()
                        .HasDatabaseName("user_id2");

                    b.ToTable("regabitur_publishtab", (string)null);
                });

            modelBuilder.Entity("Domain.RegabiturAdditionalinfo", b =>
                {
                    b.HasOne("Domain.AuthUser", "User")
                        .WithOne("RegabiturAdditionalinfo")
                        .HasForeignKey("Domain.RegabiturAdditionalinfo", "UserId")
                        .IsRequired()
                        .HasConstraintName("regabitur_additionalinfo_user_id_479b7d54_fk_auth_user_id");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.RegabiturAdditionalinfoEducationProfile", b =>
                {
                    b.HasOne("Domain.RegabiturAdditionalinfo", "Additionalinfo")
                        .WithMany("RegabiturAdditionalinfoEducationProfiles")
                        .HasForeignKey("AdditionalinfoId")
                        .IsRequired()
                        .HasConstraintName("regabitur_additional_additionalinfo_id_600cd786_fk_regabitur");

                    b.HasOne("Domain.RegabiturChoicesprofile", "Choicesprofile")
                        .WithMany("RegabiturAdditionalinfoEducationProfiles")
                        .HasForeignKey("ChoicesprofileId")
                        .IsRequired()
                        .HasConstraintName("regabitur_additional_choicesprofile_id_c3becd9c_fk_regabitur");

                    b.Navigation("Additionalinfo");

                    b.Navigation("Choicesprofile");
                });

            modelBuilder.Entity("Domain.RegabiturCustomuser", b =>
                {
                    b.HasOne("Domain.AuthUser", "User")
                        .WithOne("RegabiturCustomuser")
                        .HasForeignKey("Domain.RegabiturCustomuser", "UserId")
                        .IsRequired()
                        .HasConstraintName("regabitur_customuser_user_id_9940f6c5_fk_auth_user_id");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.RegabiturDocumentuser", b =>
                {
                    b.HasOne("Domain.AuthUser", "User")
                        .WithMany("RegabiturDocumentusers")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("regabitur_documentuser_user_id_2349932c_fk_auth_user_id");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.RegabiturPublishtab", b =>
                {
                    b.HasOne("Domain.AuthUser", "User")
                        .WithOne("RegabiturPublishtab")
                        .HasForeignKey("Domain.RegabiturPublishtab", "UserId")
                        .IsRequired()
                        .HasConstraintName("regabitur_publishtab_user_id_3906f876_fk_auth_user_id");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.AuthUser", b =>
                {
                    b.Navigation("RegabiturAdditionalinfo");

                    b.Navigation("RegabiturCustomuser");

                    b.Navigation("RegabiturDocumentusers");

                    b.Navigation("RegabiturPublishtab");
                });

            modelBuilder.Entity("Domain.RegabiturAdditionalinfo", b =>
                {
                    b.Navigation("RegabiturAdditionalinfoEducationProfiles");
                });

            modelBuilder.Entity("Domain.RegabiturChoicesprofile", b =>
                {
                    b.Navigation("RegabiturAdditionalinfoEducationProfiles");
                });
#pragma warning restore 612, 618
        }
    }
}
