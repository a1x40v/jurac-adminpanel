// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240622162345_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8_unicode_ci")
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8");

            modelBuilder.Entity("Domain.AbiturEducationalform", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("NameEducationalForm")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("name_educational_form");

                    b.HasKey("Id");

                    b.ToTable("abitur_educationalform", (string)null);
                });

            modelBuilder.Entity("Domain.AbiturEducationalformasp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("NameEducationalForm")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("name_educational_form");

                    b.HasKey("Id");

                    b.ToTable("abitur_educationalformasp", (string)null);
                });

            modelBuilder.Entity("Domain.AbiturEducationalformmag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("NameEducationalForm")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("name_educational_form");

                    b.HasKey("Id");

                    b.ToTable("abitur_educationalformmag", (string)null);
                });

            modelBuilder.Entity("Domain.AbiturEducationalformspec", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("NameEducationalForm")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("name_educational_form");

                    b.HasKey("Id");

                    b.ToTable("abitur_educationalformspec", (string)null);
                });

            modelBuilder.Entity("Domain.AbiturOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<DateOnly>("DateOrder")
                        .HasColumnType("date")
                        .HasColumnName("date_order");

                    b.Property<DateTime>("DatePub")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_pub");

                    b.Property<int>("EducationalFormId")
                        .HasColumnType("int(11)")
                        .HasColumnName("educational_form_id");

                    b.Property<string>("File")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("file");

                    b.Property<string>("NameOrder")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("name_order");

                    b.Property<string>("NumberOrder")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("number_order");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "EducationalFormId" }, "abitur_orders_educational_form_id_85a4ec2b_fk_abitur_ed");

                    b.ToTable("abitur_orders", (string)null);
                });

            modelBuilder.Entity("Domain.AbiturOrdersasp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<DateOnly>("DateOrder")
                        .HasColumnType("date")
                        .HasColumnName("date_order");

                    b.Property<DateTime>("DatePub")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_pub");

                    b.Property<int>("EducationalFormId")
                        .HasColumnType("int(11)")
                        .HasColumnName("educational_form_id");

                    b.Property<string>("File")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("file");

                    b.Property<string>("NameOrder")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("name_order");

                    b.Property<string>("NumberOrder")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("number_order");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "EducationalFormId" }, "abitur_ordersasp_educational_form_id_9681a2a1_fk_abitur_ed");

                    b.ToTable("abitur_ordersasp", (string)null);
                });

            modelBuilder.Entity("Domain.AbiturOrdersmag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<DateOnly>("DateOrder")
                        .HasColumnType("date")
                        .HasColumnName("date_order");

                    b.Property<DateTime>("DatePub")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_pub");

                    b.Property<int>("EducationalFormId")
                        .HasColumnType("int(11)")
                        .HasColumnName("educational_form_id");

                    b.Property<string>("File")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("file");

                    b.Property<string>("NameOrder")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("name_order");

                    b.Property<string>("NumberOrder")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("number_order");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "EducationalFormId" }, "abitur_ordersmag_educational_form_id_110b11ab_fk_abitur_ed");

                    b.ToTable("abitur_ordersmag", (string)null);
                });

            modelBuilder.Entity("Domain.AbiturOrdersspec", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<DateOnly>("DateOrder")
                        .HasColumnType("date")
                        .HasColumnName("date_order");

                    b.Property<DateTime>("DatePub")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_pub");

                    b.Property<int>("EducationalFormId")
                        .HasColumnType("int(11)")
                        .HasColumnName("educational_form_id");

                    b.Property<string>("File")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("file");

                    b.Property<string>("NameOrder")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("name_order");

                    b.Property<string>("NumberOrder")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("number_order");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "EducationalFormId" }, "abitur_ordersspec_educational_form_id_2c238eeb_fk_abitur_ed");

                    b.ToTable("abitur_ordersspec", (string)null);
                });

            modelBuilder.Entity("Domain.AbiturRecommendedlist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<DateOnly>("DateOrder")
                        .HasColumnType("date")
                        .HasColumnName("date_order");

                    b.Property<DateTime>("DatePub")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_pub");

                    b.Property<int>("EducationalFormId")
                        .HasColumnType("int(11)")
                        .HasColumnName("educational_form_id");

                    b.Property<string>("File")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("file");

                    b.Property<string>("NameRecList")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("name_rec_list");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "EducationalFormId" }, "abitur_recommendedli_educational_form_id_c510b5d4_fk_abitur_ed");

                    b.ToTable("abitur_recommendedlist", (string)null);
                });

            modelBuilder.Entity("Domain.AbiturRecommendedlistasp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<DateOnly>("DateOrder")
                        .HasColumnType("date")
                        .HasColumnName("date_order");

                    b.Property<DateTime>("DatePub")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_pub");

                    b.Property<int>("EducationalFormId")
                        .HasColumnType("int(11)")
                        .HasColumnName("educational_form_id");

                    b.Property<string>("File")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("file");

                    b.Property<string>("NameRecList")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("name_rec_list");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "EducationalFormId" }, "abitur_recommendedli_educational_form_id_a9089bd8_fk_abitur_ed");

                    b.ToTable("abitur_recommendedlistasp", (string)null);
                });

            modelBuilder.Entity("Domain.AbiturRecommendedlistmag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<DateOnly>("DateOrder")
                        .HasColumnType("date")
                        .HasColumnName("date_order");

                    b.Property<DateTime>("DatePub")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_pub");

                    b.Property<int>("EducationalFormId")
                        .HasColumnType("int(11)")
                        .HasColumnName("educational_form_id");

                    b.Property<string>("File")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("file");

                    b.Property<string>("NameRecList")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("name_rec_list");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "EducationalFormId" }, "abitur_recommendedli_educational_form_id_20ab5d2e_fk_abitur_ed");

                    b.ToTable("abitur_recommendedlistmag", (string)null);
                });

            modelBuilder.Entity("Domain.AbiturResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<DateTime>("DatePub")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_pub");

                    b.Property<DateOnly>("DateResult")
                        .HasColumnType("date")
                        .HasColumnName("date_result");

                    b.Property<int>("EducationalFormId")
                        .HasColumnType("int(11)")
                        .HasColumnName("educational_form_id");

                    b.Property<string>("File")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("file");

                    b.Property<string>("NameResult")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("name_result");

                    b.Property<string>("NumberResult")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("number_result");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "EducationalFormId" }, "abitur_result_educational_form_id_6873845e_fk_abitur_ed");

                    b.ToTable("abitur_result", (string)null);
                });

            modelBuilder.Entity("Domain.AbiturResultasp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<DateTime>("DatePub")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_pub");

                    b.Property<DateOnly>("DateResult")
                        .HasColumnType("date")
                        .HasColumnName("date_result");

                    b.Property<int>("EducationalFormId")
                        .HasColumnType("int(11)")
                        .HasColumnName("educational_form_id");

                    b.Property<string>("File")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("file");

                    b.Property<string>("NameResult")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("name_result");

                    b.Property<string>("NumberResult")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("number_result");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "EducationalFormId" }, "abitur_resultasp_educational_form_id_b9f800bc_fk_abitur_ed");

                    b.ToTable("abitur_resultasp", (string)null);
                });

            modelBuilder.Entity("Domain.AbiturResultmag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<DateTime>("DatePub")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_pub");

                    b.Property<DateOnly>("DateResult")
                        .HasColumnType("date")
                        .HasColumnName("date_result");

                    b.Property<int>("EducationalFormId")
                        .HasColumnType("int(11)")
                        .HasColumnName("educational_form_id");

                    b.Property<string>("File")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("file");

                    b.Property<string>("NameResult")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("name_result");

                    b.Property<string>("NumberResult")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("number_result");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "EducationalFormId" }, "abitur_resultmag_educational_form_id_44f2ad0d_fk_abitur_ed");

                    b.ToTable("abitur_resultmag", (string)null);
                });

            modelBuilder.Entity("Domain.AdminpanelEmailmessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(4096)
                        .HasColumnType("varchar(4096)")
                        .HasColumnName("content");

                    b.Property<string>("RecipientEmail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("recipientEmail");

                    b.Property<int>("RecipientId")
                        .HasColumnType("int(11)")
                        .HasColumnName("recipient_id");

                    b.Property<int>("SenderId")
                        .HasColumnType("int(11)")
                        .HasColumnName("sender_id");

                    b.Property<DateTime>("SentAt")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("sent_at");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("subject");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "RecipientId" }, "adminpanel_emailmessage_recipient_id_a8779636_fk_auth_user_id");

                    b.HasIndex(new[] { "SenderId" }, "adminpanel_emailmessage_sender_id_7d5eda7b_fk_auth_user_id");

                    b.ToTable("adminpanel_emailmessage", (string)null);
                });

            modelBuilder.Entity("Domain.AdminpanelRectabmodification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<int?>("AbiturientId")
                        .HasColumnType("int(11)")
                        .HasColumnName("abiturient_id");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("author");

                    b.Property<DateTime>("CreatedAt")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<int?>("RectabId")
                        .HasColumnType("int(11)")
                        .HasColumnName("rectab_id");

                    b.Property<ushort>("Type")
                        .HasColumnType("smallint(5) unsigned")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "AbiturientId" }, "abiturient_id")
                        .IsUnique();

                    b.HasIndex(new[] { "RectabId" }, "rectab_id")
                        .IsUnique();

                    b.ToTable("adminpanel_rectabmodification", (string)null);
                });

            modelBuilder.Entity("Domain.AuthUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<DateTime>("DateJoined")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_joined");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("varchar(254)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("first_name");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_active");

                    b.Property<bool>("IsStaff")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_staff");

                    b.Property<bool>("IsSuperuser")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_superuser");

                    b.Property<DateTime?>("LastLogin")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_login");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("last_name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("password");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Username" }, "username")
                        .IsUnique();

                    b.ToTable("auth_user", (string)null);
                });

            modelBuilder.Entity("Domain.RegabiturAdditionalinfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<int>("UserId")
                        .HasColumnType("int(11)")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "UserId" }, "user_id")
                        .IsUnique();

                    b.ToTable("regabitur_additionalinfo", (string)null);
                });

            modelBuilder.Entity("Domain.RegabiturAdditionalinfoEducationProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<int>("AdditionalinfoId")
                        .HasColumnType("int(11)")
                        .HasColumnName("additionalinfo_id");

                    b.Property<int>("ChoicesprofileId")
                        .HasColumnType("int(11)")
                        .HasColumnName("choicesprofile_id");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ChoicesprofileId" }, "regabitur_additional_choicesprofile_id_c3becd9c_fk_regabitur");

                    b.HasIndex(new[] { "AdditionalinfoId", "ChoicesprofileId" }, "regabitur_additionalinfo_additionalinfo_id_choice_a9d99a17_uniq")
                        .IsUnique();

                    b.ToTable("regabitur_additionalinfo_education_profile", (string)null);
                });

            modelBuilder.Entity("Domain.RegabiturChoicesprofile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("description");

                    b.HasKey("Id");

                    b.ToTable("regabitur_choicesprofile", (string)null);
                });

            modelBuilder.Entity("Domain.RegabiturCustomuser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("varchar(400)")
                        .HasColumnName("address");

                    b.Property<bool>("AgreementFlag")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("agreement_flag");

                    b.Property<string>("CommentAdmin")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("comment_admin");

                    b.Property<bool>("CompleteFlag")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("complete_flag");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_of_birth");

                    b.Property<string>("DateOfDoc")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("date_of_doc");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("message");

                    b.Property<string>("NameUz")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("name_uz");

                    b.Property<string>("Passport")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("passport");

                    b.Property<string>("Patronymic")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("patronymic");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("phone_number");

                    b.Property<string>("SendingStatus")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("sending_status");

                    b.Property<string>("Snils")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("snils");

                    b.Property<bool>("SuccessFlag")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("success_flag");

                    b.Property<int>("UserId")
                        .HasColumnType("int(11)")
                        .HasColumnName("user_id");

                    b.Property<bool>("WorkFlag")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("work_flag");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "UserId" }, "user_id")
                        .IsUnique()
                        .HasDatabaseName("user_id1");

                    b.ToTable("regabitur_customuser", (string)null);
                });

            modelBuilder.Entity("Domain.RegabiturDocumentuser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<DateTime>("DatePub")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_pub");

                    b.Property<string>("Doc")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("doc");

                    b.Property<string>("NameDoc")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("name_doc");

                    b.Property<int>("UserId")
                        .HasColumnType("int(11)")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "UserId" }, "regabitur_documentuser_user_id_2349932c_fk_auth_user_id");

                    b.ToTable("regabitur_documentuser", (string)null);
                });

            modelBuilder.Entity("Domain.RegabiturPublishrectab", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("Advantage")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("advantage");

                    b.Property<bool>("AspOfoGp")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("asp_ofo_gp");

                    b.Property<bool>("AspOfoKs")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("asp_ofo_ks");

                    b.Property<bool>("AspOfoTip")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("asp_ofo_tip");

                    b.Property<bool>("AspOfoUgp")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("asp_ofo_ugp");

                    b.Property<bool>("AspOfoUp")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("asp_ofo_up");

                    b.Property<bool>("AspZfoKs")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("asp_zfo_ks");

                    b.Property<bool>("AspZfoTip")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("asp_zfo_tip");

                    b.Property<bool>("AspZfoUp")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("asp_zfo_up");

                    b.Property<bool>("BakOfoGp")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("bak_ofo_gp");

                    b.Property<bool>("BakOfoUp")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("bak_ofo_up");

                    b.Property<bool>("BakOzfoGp")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("bak_ozfo_gp");

                    b.Property<bool>("BakOzfoUp")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("bak_ozfo_up");

                    b.Property<bool>("BakZfoGp")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("bak_zfo_gp");

                    b.Property<bool>("BakZfoUp")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("bak_zfo_up");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("comment");

                    b.Property<DateTime?>("DatePub")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_pub");

                    b.Property<short>("ForeignLanguagePoint")
                        .HasColumnType("smallint(6)")
                        .HasColumnName("foreign_language_point");

                    b.Property<short>("GpPoint")
                        .HasColumnType("smallint(6)")
                        .HasColumnName("gp_point");

                    b.Property<short>("HistoryPoint")
                        .HasColumnType("smallint(6)")
                        .HasColumnName("history_point");

                    b.Property<short>("Individ")
                        .HasColumnType("smallint(6)")
                        .HasColumnName("individ");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_published");

                    b.Property<short>("KpPoint")
                        .HasColumnType("smallint(6)")
                        .HasColumnName("kp_point");

                    b.Property<bool>("MagOfoPo")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("mag_ofo_po");

                    b.Property<bool>("MagOfoTp")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("mag_ofo_tp");

                    b.Property<bool>("MagZfoPo")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("mag_zfo_po");

                    b.Property<bool>("MagZfoTp")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("mag_zfo_tp");

                    b.Property<short>("ObshPoint")
                        .HasColumnType("smallint(6)")
                        .HasColumnName("obsh_point");

                    b.Property<short>("OkpPoint")
                        .HasColumnType("smallint(6)")
                        .HasColumnName("okp_point");

                    b.Property<short>("RusPoint")
                        .HasColumnType("smallint(6)")
                        .HasColumnName("rus_point");

                    b.Property<string>("Sogl")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("sogl");

                    b.Property<string>("SostType")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("sost_type");

                    b.Property<bool>("SpecOfoSd")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("spec_ofo_sd");

                    b.Property<short>("SpecPoint")
                        .HasColumnType("smallint(6)")
                        .HasColumnName("spec_point");

                    b.Property<short>("SumPoints")
                        .HasColumnType("smallint(6)")
                        .HasColumnName("sum_points");

                    b.Property<string>("TestType")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("test_type");

                    b.Property<short>("TgpPoint")
                        .HasColumnType("smallint(6)")
                        .HasColumnName("tgp_point");

                    b.Property<short>("UpPoint")
                        .HasColumnType("smallint(6)")
                        .HasColumnName("up_point");

                    b.Property<int>("UserId")
                        .HasColumnType("int(11)")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "UserId" }, "user_id")
                        .IsUnique()
                        .HasDatabaseName("user_id2");

                    b.ToTable("regabitur_publishrectab", (string)null);
                });

            modelBuilder.Entity("Domain.RegabiturPublishtab", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<bool>("AspOfoGp")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("asp_ofo_gp");

                    b.Property<bool>("AspOfoKs")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("asp_ofo_ks");

                    b.Property<bool>("AspOfoTip")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("asp_ofo_tip");

                    b.Property<bool>("AspOfoUgp")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("asp_ofo_ugp");

                    b.Property<bool>("AspOfoUp")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("asp_ofo_up");

                    b.Property<bool>("AspZfoKs")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("asp_zfo_ks");

                    b.Property<bool>("AspZfoTip")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("asp_zfo_tip");

                    b.Property<bool>("AspZfoUp")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("asp_zfo_up");

                    b.Property<bool>("BakOfoGp")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("bak_ofo_gp");

                    b.Property<bool>("BakOfoUp")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("bak_ofo_up");

                    b.Property<bool>("BakOzfoGp")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("bak_ozfo_gp");

                    b.Property<bool>("BakOzfoUp")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("bak_ozfo_up");

                    b.Property<bool>("BakZfoGp")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("bak_zfo_gp");

                    b.Property<bool>("BakZfoUp")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("bak_zfo_up");

                    b.Property<DateTime?>("DatePub")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_pub");

                    b.Property<string>("IndividualStr")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("individual_str");

                    b.Property<bool>("MagOfoCorp")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("mag_ofo_corp");

                    b.Property<bool>("MagOfoMed")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("mag_ofo_med");

                    b.Property<bool>("MagOfoPo")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("mag_ofo_po");

                    b.Property<bool>("MagOfoTp")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("mag_ofo_tp");

                    b.Property<bool>("MagZfoCorp")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("mag_zfo_corp");

                    b.Property<bool>("MagZfoMed")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("mag_zfo_med");

                    b.Property<bool>("MagZfoPo")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("mag_zfo_po");

                    b.Property<bool>("MagZfoTp")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("mag_zfo_tp");

                    b.Property<bool>("SpecOfoSd")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("spec_ofo_sd");

                    b.Property<bool>("SpecZfoSd")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("spec_zfo_sd");

                    b.Property<string>("TestType")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("test_type");

                    b.Property<int>("UserId")
                        .HasColumnType("int(11)")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "UserId" }, "user_id")
                        .IsUnique()
                        .HasDatabaseName("user_id3");

                    b.ToTable("regabitur_publishtab", (string)null);
                });

            modelBuilder.Entity("Domain.AbiturOrder", b =>
                {
                    b.HasOne("Domain.AbiturEducationalform", "EducationalForm")
                        .WithMany("AbiturOrders")
                        .HasForeignKey("EducationalFormId")
                        .IsRequired()
                        .HasConstraintName("abitur_orders_educational_form_id_85a4ec2b_fk_abitur_ed");

                    b.Navigation("EducationalForm");
                });

            modelBuilder.Entity("Domain.AbiturOrdersasp", b =>
                {
                    b.HasOne("Domain.AbiturEducationalformasp", "EducationalForm")
                        .WithMany("AbiturOrdersasps")
                        .HasForeignKey("EducationalFormId")
                        .IsRequired()
                        .HasConstraintName("abitur_ordersasp_educational_form_id_9681a2a1_fk_abitur_ed");

                    b.Navigation("EducationalForm");
                });

            modelBuilder.Entity("Domain.AbiturOrdersmag", b =>
                {
                    b.HasOne("Domain.AbiturEducationalformmag", "EducationalForm")
                        .WithMany("AbiturOrdersmags")
                        .HasForeignKey("EducationalFormId")
                        .IsRequired()
                        .HasConstraintName("abitur_ordersmag_educational_form_id_110b11ab_fk_abitur_ed");

                    b.Navigation("EducationalForm");
                });

            modelBuilder.Entity("Domain.AbiturOrdersspec", b =>
                {
                    b.HasOne("Domain.AbiturEducationalformspec", "EducationalForm")
                        .WithMany("AbiturOrdersspecs")
                        .HasForeignKey("EducationalFormId")
                        .IsRequired()
                        .HasConstraintName("abitur_ordersspec_educational_form_id_2c238eeb_fk_abitur_ed");

                    b.Navigation("EducationalForm");
                });

            modelBuilder.Entity("Domain.AbiturRecommendedlist", b =>
                {
                    b.HasOne("Domain.AbiturEducationalform", "EducationalForm")
                        .WithMany("AbiturRecommendedlists")
                        .HasForeignKey("EducationalFormId")
                        .IsRequired()
                        .HasConstraintName("abitur_recommendedli_educational_form_id_c510b5d4_fk_abitur_ed");

                    b.Navigation("EducationalForm");
                });

            modelBuilder.Entity("Domain.AbiturRecommendedlistasp", b =>
                {
                    b.HasOne("Domain.AbiturEducationalformasp", "EducationalForm")
                        .WithMany("AbiturRecommendedlistasps")
                        .HasForeignKey("EducationalFormId")
                        .IsRequired()
                        .HasConstraintName("abitur_recommendedli_educational_form_id_a9089bd8_fk_abitur_ed");

                    b.Navigation("EducationalForm");
                });

            modelBuilder.Entity("Domain.AbiturRecommendedlistmag", b =>
                {
                    b.HasOne("Domain.AbiturEducationalformmag", "EducationalForm")
                        .WithMany("AbiturRecommendedlistmags")
                        .HasForeignKey("EducationalFormId")
                        .IsRequired()
                        .HasConstraintName("abitur_recommendedli_educational_form_id_20ab5d2e_fk_abitur_ed");

                    b.Navigation("EducationalForm");
                });

            modelBuilder.Entity("Domain.AbiturResult", b =>
                {
                    b.HasOne("Domain.AbiturEducationalform", "EducationalForm")
                        .WithMany("AbiturResults")
                        .HasForeignKey("EducationalFormId")
                        .IsRequired()
                        .HasConstraintName("abitur_result_educational_form_id_6873845e_fk_abitur_ed");

                    b.Navigation("EducationalForm");
                });

            modelBuilder.Entity("Domain.AbiturResultasp", b =>
                {
                    b.HasOne("Domain.AbiturEducationalformasp", "EducationalForm")
                        .WithMany("AbiturResultasps")
                        .HasForeignKey("EducationalFormId")
                        .IsRequired()
                        .HasConstraintName("abitur_resultasp_educational_form_id_b9f800bc_fk_abitur_ed");

                    b.Navigation("EducationalForm");
                });

            modelBuilder.Entity("Domain.AbiturResultmag", b =>
                {
                    b.HasOne("Domain.AbiturEducationalformmag", "EducationalForm")
                        .WithMany("AbiturResultmags")
                        .HasForeignKey("EducationalFormId")
                        .IsRequired()
                        .HasConstraintName("abitur_resultmag_educational_form_id_44f2ad0d_fk_abitur_ed");

                    b.Navigation("EducationalForm");
                });

            modelBuilder.Entity("Domain.AdminpanelEmailmessage", b =>
                {
                    b.HasOne("Domain.AuthUser", "Recipient")
                        .WithMany("AdminpanelEmailmessageRecipients")
                        .HasForeignKey("RecipientId")
                        .IsRequired()
                        .HasConstraintName("adminpanel_emailmessage_recipient_id_a8779636_fk_auth_user_id");

                    b.HasOne("Domain.AuthUser", "Sender")
                        .WithMany("AdminpanelEmailmessageSenders")
                        .HasForeignKey("SenderId")
                        .IsRequired()
                        .HasConstraintName("adminpanel_emailmessage_sender_id_7d5eda7b_fk_auth_user_id");

                    b.Navigation("Recipient");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("Domain.AdminpanelRectabmodification", b =>
                {
                    b.HasOne("Domain.AuthUser", "Abiturient")
                        .WithOne("AdminpanelRectabmodification")
                        .HasForeignKey("Domain.AdminpanelRectabmodification", "AbiturientId")
                        .HasConstraintName("adminpanel_rectabmod_abiturient_id_80877e36_fk_auth_user");

                    b.HasOne("Domain.RegabiturPublishrectab", "Rectab")
                        .WithOne("AdminpanelRectabmodification")
                        .HasForeignKey("Domain.AdminpanelRectabmodification", "RectabId")
                        .HasConstraintName("adminpanel_rectabmod_rectab_id_48d138d3_fk_regabitur");

                    b.Navigation("Abiturient");

                    b.Navigation("Rectab");
                });

            modelBuilder.Entity("Domain.RegabiturAdditionalinfo", b =>
                {
                    b.HasOne("Domain.AuthUser", "User")
                        .WithOne("RegabiturAdditionalinfo")
                        .HasForeignKey("Domain.RegabiturAdditionalinfo", "UserId")
                        .IsRequired()
                        .HasConstraintName("regabitur_additionalinfo_user_id_479b7d54_fk_auth_user_id");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.RegabiturAdditionalinfoEducationProfile", b =>
                {
                    b.HasOne("Domain.RegabiturAdditionalinfo", "Additionalinfo")
                        .WithMany("RegabiturAdditionalinfoEducationProfiles")
                        .HasForeignKey("AdditionalinfoId")
                        .IsRequired()
                        .HasConstraintName("regabitur_additional_additionalinfo_id_600cd786_fk_regabitur");

                    b.HasOne("Domain.RegabiturChoicesprofile", "Choicesprofile")
                        .WithMany("RegabiturAdditionalinfoEducationProfiles")
                        .HasForeignKey("ChoicesprofileId")
                        .IsRequired()
                        .HasConstraintName("regabitur_additional_choicesprofile_id_c3becd9c_fk_regabitur");

                    b.Navigation("Additionalinfo");

                    b.Navigation("Choicesprofile");
                });

            modelBuilder.Entity("Domain.RegabiturCustomuser", b =>
                {
                    b.HasOne("Domain.AuthUser", "User")
                        .WithOne("RegabiturCustomuser")
                        .HasForeignKey("Domain.RegabiturCustomuser", "UserId")
                        .IsRequired()
                        .HasConstraintName("regabitur_customuser_user_id_9940f6c5_fk_auth_user_id");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.RegabiturDocumentuser", b =>
                {
                    b.HasOne("Domain.AuthUser", "User")
                        .WithMany("RegabiturDocumentusers")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("regabitur_documentuser_user_id_2349932c_fk_auth_user_id");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.RegabiturPublishrectab", b =>
                {
                    b.HasOne("Domain.AuthUser", "User")
                        .WithOne("RegabiturPublishrectab")
                        .HasForeignKey("Domain.RegabiturPublishrectab", "UserId")
                        .IsRequired()
                        .HasConstraintName("regabitur_publishrectab_user_id_9c7ed683_fk_auth_user_id");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.RegabiturPublishtab", b =>
                {
                    b.HasOne("Domain.AuthUser", "User")
                        .WithOne("RegabiturPublishtab")
                        .HasForeignKey("Domain.RegabiturPublishtab", "UserId")
                        .IsRequired()
                        .HasConstraintName("regabitur_publishtab_user_id_3906f876_fk_auth_user_id");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.AbiturEducationalform", b =>
                {
                    b.Navigation("AbiturOrders");

                    b.Navigation("AbiturRecommendedlists");

                    b.Navigation("AbiturResults");
                });

            modelBuilder.Entity("Domain.AbiturEducationalformasp", b =>
                {
                    b.Navigation("AbiturOrdersasps");

                    b.Navigation("AbiturRecommendedlistasps");

                    b.Navigation("AbiturResultasps");
                });

            modelBuilder.Entity("Domain.AbiturEducationalformmag", b =>
                {
                    b.Navigation("AbiturOrdersmags");

                    b.Navigation("AbiturRecommendedlistmags");

                    b.Navigation("AbiturResultmags");
                });

            modelBuilder.Entity("Domain.AbiturEducationalformspec", b =>
                {
                    b.Navigation("AbiturOrdersspecs");
                });

            modelBuilder.Entity("Domain.AuthUser", b =>
                {
                    b.Navigation("AdminpanelEmailmessageRecipients");

                    b.Navigation("AdminpanelEmailmessageSenders");

                    b.Navigation("AdminpanelRectabmodification");

                    b.Navigation("RegabiturAdditionalinfo");

                    b.Navigation("RegabiturCustomuser");

                    b.Navigation("RegabiturDocumentusers");

                    b.Navigation("RegabiturPublishrectab");

                    b.Navigation("RegabiturPublishtab");
                });

            modelBuilder.Entity("Domain.RegabiturAdditionalinfo", b =>
                {
                    b.Navigation("RegabiturAdditionalinfoEducationProfiles");
                });

            modelBuilder.Entity("Domain.RegabiturChoicesprofile", b =>
                {
                    b.Navigation("RegabiturAdditionalinfoEducationProfiles");
                });

            modelBuilder.Entity("Domain.RegabiturPublishrectab", b =>
                {
                    b.Navigation("AdminpanelRectabmodification");
                });
#pragma warning restore 612, 618
        }
    }
}
